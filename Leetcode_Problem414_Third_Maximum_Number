int thirdMax(int* nums, int numsSize){
    long first = ((long)INT_MIN)-1, second = ((long)INT_MIN)-1, third = ((long)INT_MIN)-1;
    int i = 0;
    while(i < numsSize)
    {
        if(nums[i] > first)
        {
            third = second;
            second = first;
            first = nums[i];
        }
        else if(nums[i] > second && nums[i] != first){
            third = second;
            second = nums[i];
        }
        else if(nums[i] > third && nums[i] != first && nums[i] != second)
            third = nums[i];
        i++;
    }
    if(third == ((long)INT_MIN)-1) 
        return (int)first;
    return (int)third;
}




-----------------------------------------------------------------------------------------------------------------------




int cmp(const void *a, const void *b)
{
    if (*((int *)b) > *((int *)a)) 
        return 1;
    else if (*((int *)b) < *((int *)a)) 
        return -1;
    else 
        return 0;
}
int thirdMax(int* nums, int numsSize){
    qsort(nums, numsSize, sizeof(int), cmp);
    int third_max = nums[0], count = 1;
    for (int i = 1; i < numsSize; i++) 
    {
        if (nums[i] < third_max) 
        {
            third_max = nums[i];
            if (++count == 3) 
                break;
        }
    }
    return (count != 3) ? nums[0] : third_max;
}
